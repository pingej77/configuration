#!/bin/bash

#update if needed
sudo pacman -Syu || exit 1
#install zsh and vim
which zsh || sudo pacman -S zsh
which vim || sudo pacman -S vim
#install utilities
sudo pacman -S eza bat duf ripgrep fzf neofetch glances htop net-tools extra/bind iw

#install nano and enable nano syntax highlighting
which nano || sudo pacman -S nano && find /usr/share/nano/ -iname "*.nanorc" -exec echo include {} \; >> ~/.nanorc


printf 'runtime defaults.vim
set tabstop=4
set shiftwidth=4
set number
highlight LineNr ctermfg=grey' > ~/.vimrc

#install trizen AUR package manager
sudo pacman -Sy --needed base-devel git 
if ! which trizen; then
    git clone https://aur.archlinux.org/trizen.git
    cd trizen
    makepkg -si
    cd ..
fi

#install wttr front-end tool
which wttr || sudo curl -o /usr/local/bin/wttr https://raw.githubusercontent.com/pingej77/wttr/main/wttr && sudo chmod +x /usr/local/bin/wttr
#install net info
which netinfo || sudo curl -o /usr/local/bin/netinfo https://raw.githubusercontent.com/pingej77/netinfo/main/netinfo && sudo chmod +x /usr/local/bin/netinfo

#!/bin/bash

#create aliases
printf "alias ls='exa -F'
alias lsa='exa -aF'
alias l='exa -1F --icons'
alias la='exa -1aF --icons'
alias ll='exa -lhumF --icons'
alias lla='exa -lhFa --icons'
alias lt='exa -F -L 2 --tree --icons'
alias ltd='exa -DF --tree --icons'
alias ltt='exa -F --tree --icons'
alias lta='exa -aF -L 2 --tree --icons'
alias llt='exa -lhumF -L 2 --tree --icons'
alias lltt='exa -lF --tree --icons'
alias llta='exa -laF -L 2 --tree'
alias ltta='exa -aF --tree --icons'
alias lltta='exa -laF --tree'
alias dsa='du -ah --max-depth=1'
alias tua='ss -tua'
alias ip='ip --color'
alias cls='clear'
alias dir='exa -F'
alias duf='duf -hide special'
alias ECHO='echo'
alias ping='ping -c 3'
alias PING='ping'
alias neofetch='neofetch --color_blocks off'" \
| tee -a $HOME/.bashrc >> $HOME/.zshrc

#turn on cdspell for bash, plus autocorrection and case-insensitive cd for zsh
printf "shopt -s cdspell" >> $HOME/.bashrc
printf "setopt correct" >> $HOME/.zshrc
cat << 'EOT' >> $HOME/.zshrc
function cd() {
        dir_found=false
        if (builtin cd $1 2> /dev/null) 
        then
                builtin cd $1
                dir_found=true
        else
        IFS=$'\n'
		directories=($(find . -maxdepth 1 -type d | sed -e 's|\./||'))
        IFS=' '
		for dir in ${directories[@]}
        do
                if [[ ${(L)dir} == ${(L)*} ]]; then
                echo "$dir"
                builtin cd "$dir"
                dir_found=true
                fi
        done
        fi
        [[ $dir_found != true ]] && echo "cd: no such file or directory: $*"
} 

EOT

cat << 'EOT' >> $HOME/.zshrc
function ss {
yellow=$(tput setaf 226) #for not-yet connected handshakes
blue=$(tput setaf 27)	#for listening
green=$(tput setaf 2)	#for established
red=$(tput setaf 9)		#for unconnected and closed
grey=$(tput setaf 8)	#for closing/timeout connections
tcp=$(tput setaf 3)
udp=$(tput setaf 28)
icmp=$(tput setaf 50)
sctp=$(tput setaf 12)
dccp=$(tput setaf 204)
ipv6=$(tput setaf 4)
ipv4=$(tput setaf 5)
port=$(tput setaf 11)
iface=$(tput setaf 6)
reset=$(tput sgr0)

command ss $* | \
		sed -e "s/\[/${ipv6}\[/g" | \
        awk -v hdr=$(tput bold; tput smul) -v rst=$(tput sgr0) 'NR == 1{$0 = hdr$0rst} 1' | \
        sed "s/ESTAB/${green}&/g" | \
        sed "s/UNCONN/${red}&/g" | \
		sed "s/CLOSED/${red}&/" | \
        sed "s/LISTEN/${blue}&/g" | \
        sed "s/TIME-WAIT/${grey}&/g" | \
        sed -E "s/FIN-WAIT.?/${grey}&/g" | \
        sed "s/CLOSE-WAIT/${grey}&/g" | \
        sed "s/LAST-ACK/${grey}&/g" | \
        sed "s/CLOSING/${grey}&/g" | \
        sed "s/SYN-SENT/${yellow}&/g" | \
        sed "s/SYN-RECV/${yellow}&/g" | \
        sed -e "s/\]:/\]${port}:/g" | \
		sed -E "2,$ s/([g-z]):/\1${port}:/g" | \
		sed -E "2,$ s/(\.[0-9]*):/\1${port}:/g" | \
		sed -e "s/\*:/\*${port}:/g" | \
        sed -e "s/tcp\s/${tcp}&/" | \
        sed -e "s/udp\s/${udp}&/" | \
		sed "s/icmp/${icmp}&/" | \
		sed "s/dccp/${dccp}&/" | \
		sed "s/sctp/${sctp}&/" | \
        sed -e "s/[0-9]*\.[0-9]*\.[0-9]*\.[0-9]*/${ipv4}&${reset}/g" | \
        sed -E "s/(%[^:]*):/${iface}\1${port}:/" | \
		sed -e "2,$ s/\s/${reset}&/g" | \
		sed -E "2,$ s/:\(/${reset}:\(/g"
	}
EOT
